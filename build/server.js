var express=require("express"),router=express.Router();router.get("/",function(r,e,s){e.render("index",{title:"todos",error:r.flash("error").toString(),success:r.flash("success").toString()})}),module.exports=router;
var express=require("express"),router=express.Router(),crypto=require("crypto"),models=require("../model/user.js"),User=models.User;router.get("/",function(e,r,s){r.render("login",{title:"login",error:e.flash("error").toString(),success:e.flash("success").toString()})}),router.post("/",function(e,r,s){console.log("in login"),console.log(e.body);var o=crypto.createHash("md5"),t=o.update(e.body.password).digest("hex");console.log(t),User.find({username:e.body.username},function(s,o){return o.length<1?(e.flash("error","The username not exists"),r.redirect("/login")):o[0].password!=t?(e.flash("error","The password is wrong"),r.redirect("/login")):(e.session.user=o[0].username,e.flash("success","Login success"),void r.redirect("/todos"))})}),module.exports=router;
var express=require("express"),router=express.Router();router.get("/",function(e,s,r){e.session.user=null,e.flash("success","success logout"),s.redirect("/")}),module.exports=router;
var express=require("express"),router=express.Router(),crypto=require("crypto"),mongoose=require("mongoose"),models=require("../model/user.js"),User=models.User;mongoose.connect("mongodb://localhost/todos"),router.get("/",function(e,r,s){r.render("reg",{title:"reg",error:e.flash("error").toString(),success:e.flash("success").toString()})}),router.post("/",function(e,r,s){var o=e.body.username,t=e.body.password,n=e.body.cfPassword;if(t!=n)return e.flash("error","The password is inconsistent"),r.redirect("/reg");var u=crypto.createHash("md5");t=u.update(e.body.password).digest("hex");var a=new User({username:o,password:t});User.find({username:a.username},function(s,o){return o.length>0?(e.flash("error","The username already exists"),r.redirect("/reg")):void a.save(function(s){return s?(e.flash("error",s),r.redirect("/reg")):(e.session.user=a.username,e.flash("success","success reg"),void r.redirect("/todos"))})})}),module.exports=router;
var express=require("express"),getDate=require("../util/getFormatDate.js"),async=require("async"),router=express.Router(),models=require("../model/todosModel.js"),Todos=models.todosModel;router.get("/",function(req,res,next){var username=req.session.user,content=req.query.content;console.log("content : "+content),console.log(username),username?content?(content=eval("/"+req.query.content+"/"),Todos.find({content:content,username:username},function(e,o){res.json({result:o,success:1})})):Todos.find({username:username},function(e,o){console.log(o),res.render("todo",{title:"Todos",todos:o})}):(req.flash("error","Please login"),res.redirect("/login"))}),router.post("/",function(e,o,n){var s=e.session.user,t=e.body.content,r=getDate.getFormatDate(new Date),u=new Todos({username:s,content:t,time:r});async.series([function(e){u.save(function(o){e()})},function(e){Todos.find({username:s},function(e,n){o.render("todo",{title:"Todos",todos:n})})}],function(e){e?console.error(e):console.log(ok)})}),router["delete"]("/",function(e,o,n){var s=e.query.id;console.log(e.query),s&&Todos.remove({_id:s},function(e){e?console.log(e):(console.log("delete OK"),o.json({success:1}))})}),module.exports=router;